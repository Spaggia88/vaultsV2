{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9A4200131bc18E747F0001AFDBD62F4E5BF4Ad9f",
    "txHash": "0x93e232a21935300fd0fd5439b09da97ba16808e13df739294ef3e28c0116ddfc"
  },
  "proxies": [
    {
      "address": "0x0eAaDb50167702993fe0b4d5Cce7d6a3C1572109",
      "txHash": "0xced53060f858d3549717044abb921d202dc2233ab8d87339e0b43d9885518fd7",
      "kind": "transparent"
    },
    {
      "address": "0x0CECa23490E9a9E60dC52d3A0D98FCA007C86113",
      "txHash": "0xaa53174b10d842e93aaa835a14597c4e06cbac8a3ba212bbcdb0d37bf07f02f6",
      "kind": "transparent"
    },
    {
      "address": "0xaa5934Cceb065704e42413d302F93C1d4453919a",
      "txHash": "0xc2266a9a4515b38f1323ef5a289a15cc20f6b01d71912da18e9d8ce1d2368bf3",
      "kind": "transparent"
    },
    {
      "address": "0x1722D939783598F5F0Ce6441bb1f85AE0E3dd4BA",
      "txHash": "0x6d5dbfafb126b9cfca0841654b11c8fca7879c57e682bed9e67a92b62d207ce9",
      "kind": "transparent"
    },
    {
      "address": "0xe6D244B77CDb5FDA68390676C65a1a8C1c72B611",
      "txHash": "0x1af36ed36e88e389f09477269c369b559351bf33d5197bc1e26f957f733ba88c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bd54c27a3d961124973bb023df6c36fdd7150ac4342e8834bda64f046f457909": {
      "address": "0x7c384a7051269A8F7e299D11f0B981d85C8dd77C",
      "txHash": "0xa33631d15a3de1c69bb02fb9bf2443414955fe980faa7a05718a329ecd17cfc3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IStargateRouter)12427",
            "contract": "SgBridge",
            "src": "contracts/SgBridge.sol:15"
          },
          {
            "label": "slippage",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "SgBridge",
            "src": "contracts/SgBridge.sol:17"
          },
          {
            "label": "dstGasForCall",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "SgBridge",
            "src": "contracts/SgBridge.sol:18"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "104",
            "type": "t_uint16",
            "contract": "SgBridge",
            "src": "contracts/SgBridge.sol:19"
          },
          {
            "label": "poolIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint16,t_uint256))",
            "contract": "SgBridge",
            "src": "contracts/SgBridge.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IStargateRouter)12427": {
            "label": "contract IStargateRouter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(address => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "86f6c9ac8100c407ae788af819e853a999de2ec213bfa8c23fc200d28cc81764": {
      "address": "0xD8Ed07a7ad69f8E9D06A3b59847c0Fc9525F11E8",
      "txHash": "0xdf4ff9e69d72187918d3de5b1daa1eba977891c17811087a045b8ebdf603cb1f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)144",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:53"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)4768",
            "contract": "Vault",
            "src": "contracts/Vault.sol:54"
          },
          {
            "label": "sgBridge",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ISgBridge)10622",
            "contract": "Vault",
            "src": "contracts/Vault.sol:56"
          },
          {
            "label": "totalDebtRatio",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:57"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:58"
          },
          {
            "label": "emergencyShutdown",
            "offset": 0,
            "slot": "256",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/Vault.sol:59"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10695_storage))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:60"
          },
          {
            "label": "withdrawEpoch",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:61"
          },
          {
            "label": "_strategiesByChainId",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:63"
          },
          {
            "label": "_supportedChainIds",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(UintSet)8233_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:64"
          },
          {
            "label": "_withdrawEpochs",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(WithdrawEpoch)10731_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:65"
          },
          {
            "label": "_usedNonces",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawRequest)10708_storage)dyn_storage": {
            "label": "struct WithdrawRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)144": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISgBridge)10622": {
            "label": "contract ISgBridge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StrategyParams)10695_storage)": {
            "label": "mapping(address => struct StrategyParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint16 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint16 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10695_storage))": {
            "label": "mapping(uint16 => mapping(address => struct StrategyParams))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint16 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)": {
            "label": "mapping(uint16 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawEpoch)10731_storage)": {
            "label": "mapping(uint256 => struct WithdrawEpoch)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8076_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)7761_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StrategyParams)10695_storage": {
            "label": "struct StrategyParams",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalGain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReport",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "performanceFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "strategist",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(UintSet)8233_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawEpoch)10731_storage": {
            "label": "struct WithdrawEpoch",
            "members": [
              {
                "label": "requests",
                "type": "t_array(t_struct(WithdrawRequest)10708_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inProgress",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approveExpected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approveActual",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approved",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedAmount",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(WithdrawRequest)10708_storage": {
            "label": "struct WithdrawRequest",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "success",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "af9b69ba95edca50fba12ec0a94df295bd9926475909883427687e432ed9cf02": {
      "address": "0xa4e6a596d6df07e4c56c91695fE2F7Df1Ecc28c3",
      "txHash": "0x5e2adf10bcdecc3dad0c2a70684c7a846beffb103dde0fff89fd0d9854998def",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)144",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:53"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)4768",
            "contract": "Vault",
            "src": "contracts/Vault.sol:54"
          },
          {
            "label": "sgBridge",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ISgBridge)10628",
            "contract": "Vault",
            "src": "contracts/Vault.sol:56"
          },
          {
            "label": "totalDebtRatio",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:57"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:58"
          },
          {
            "label": "emergencyShutdown",
            "offset": 0,
            "slot": "256",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/Vault.sol:59"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10701_storage))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:60"
          },
          {
            "label": "withdrawEpoch",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:61"
          },
          {
            "label": "_strategiesByChainId",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:63"
          },
          {
            "label": "_supportedChainIds",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(UintSet)8233_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:64"
          },
          {
            "label": "_withdrawEpochs",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(WithdrawEpoch)10737_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:65"
          },
          {
            "label": "_usedNonces",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawRequest)10714_storage)dyn_storage": {
            "label": "struct WithdrawRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)144": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISgBridge)10628": {
            "label": "contract ISgBridge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StrategyParams)10701_storage)": {
            "label": "mapping(address => struct StrategyParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint16 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint16 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10701_storage))": {
            "label": "mapping(uint16 => mapping(address => struct StrategyParams))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint16 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)": {
            "label": "mapping(uint16 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawEpoch)10737_storage)": {
            "label": "mapping(uint256 => struct WithdrawEpoch)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8076_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)7761_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StrategyParams)10701_storage": {
            "label": "struct StrategyParams",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalGain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReport",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "performanceFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "strategist",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(UintSet)8233_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawEpoch)10737_storage": {
            "label": "struct WithdrawEpoch",
            "members": [
              {
                "label": "requests",
                "type": "t_array(t_struct(WithdrawRequest)10714_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inProgress",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approveExpected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approveActual",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approved",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedAmount",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(WithdrawRequest)10714_storage": {
            "label": "struct WithdrawRequest",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "success",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4471ff045f9418b53ec84a7ba9a89fcaef33580dc63f89ebb511fe7b2910e342": {
      "address": "0xcfDf6bc7f5Bca0274aE80fA852c89a1b671a1a89",
      "txHash": "0x8cf0a65964e4e1b5cb7d5f88228e3eac0115e49ec912b09473686342dab20440",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)144",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:55"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)4768",
            "contract": "Vault",
            "src": "contracts/Vault.sol:56"
          },
          {
            "label": "sgBridge",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ISgBridge)10594",
            "contract": "Vault",
            "src": "contracts/Vault.sol:58"
          },
          {
            "label": "totalDebtRatio",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:59"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:60"
          },
          {
            "label": "emergencyShutdown",
            "offset": 0,
            "slot": "256",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/Vault.sol:61"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10667_storage))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:62"
          },
          {
            "label": "withdrawEpoch",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:63"
          },
          {
            "label": "_strategiesByChainId",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:65"
          },
          {
            "label": "_supportedChainIds",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(UintSet)8233_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:66"
          },
          {
            "label": "_withdrawEpochs",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(WithdrawEpoch)10703_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:67"
          },
          {
            "label": "_usedNonces",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:68"
          },
          {
            "label": "sgRouter",
            "offset": 0,
            "slot": "264",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawRequest)10680_storage)dyn_storage": {
            "label": "struct WithdrawRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)144": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISgBridge)10594": {
            "label": "contract ISgBridge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StrategyParams)10667_storage)": {
            "label": "mapping(address => struct StrategyParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint16 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint16 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10667_storage))": {
            "label": "mapping(uint16 => mapping(address => struct StrategyParams))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint16 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)": {
            "label": "mapping(uint16 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawEpoch)10703_storage)": {
            "label": "mapping(uint256 => struct WithdrawEpoch)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8076_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)7761_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StrategyParams)10667_storage": {
            "label": "struct StrategyParams",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalGain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReport",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "performanceFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "strategist",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(UintSet)8233_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawEpoch)10703_storage": {
            "label": "struct WithdrawEpoch",
            "members": [
              {
                "label": "requests",
                "type": "t_array(t_struct(WithdrawRequest)10680_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inProgress",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approveExpected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approveActual",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approved",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedAmount",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(WithdrawRequest)10680_storage": {
            "label": "struct WithdrawRequest",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "success",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2e5c64f86581c4e5e6bb37480819434adfddc3c856c7079ba970607d94834a24": {
      "address": "0x570095834058137Fa77634e935C984D4e4590515",
      "txHash": "0x6857e8a7e4fb79c5221c8b64ae8faa27caebb2ef207201fb4e6f8b59ae16d781",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)144",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:55"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)4768",
            "contract": "Vault",
            "src": "contracts/Vault.sol:56"
          },
          {
            "label": "sgBridge",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ISgBridge)10610",
            "contract": "Vault",
            "src": "contracts/Vault.sol:58"
          },
          {
            "label": "totalDebtRatio",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:59"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:60"
          },
          {
            "label": "emergencyShutdown",
            "offset": 0,
            "slot": "256",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/Vault.sol:61"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10683_storage))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:62"
          },
          {
            "label": "withdrawEpoch",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:63"
          },
          {
            "label": "_strategiesByChainId",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:65"
          },
          {
            "label": "_supportedChainIds",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(UintSet)8233_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:66"
          },
          {
            "label": "_withdrawEpochs",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(WithdrawEpoch)10719_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:67"
          },
          {
            "label": "_usedNonces",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:68"
          },
          {
            "label": "sgRouter",
            "offset": 0,
            "slot": "264",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawRequest)10696_storage)dyn_storage": {
            "label": "struct WithdrawRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)144": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISgBridge)10610": {
            "label": "contract ISgBridge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StrategyParams)10683_storage)": {
            "label": "mapping(address => struct StrategyParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint16 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint16 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)10683_storage))": {
            "label": "mapping(uint16 => mapping(address => struct StrategyParams))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint16 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)": {
            "label": "mapping(uint16 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawEpoch)10719_storage)": {
            "label": "mapping(uint256 => struct WithdrawEpoch)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8076_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)7761_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StrategyParams)10683_storage": {
            "label": "struct StrategyParams",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalGain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReport",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "performanceFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "strategist",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(UintSet)8233_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawEpoch)10719_storage": {
            "label": "struct WithdrawEpoch",
            "members": [
              {
                "label": "requests",
                "type": "t_array(t_struct(WithdrawRequest)10696_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inProgress",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approveExpected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approveActual",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approved",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedAmount",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(WithdrawRequest)10696_storage": {
            "label": "struct WithdrawRequest",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "success",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1d478fb3edab88248c6468470efac64667749502d4c940a470a1c817a49db643": {
      "address": "0x037D972181E08c4B1C20f7D7A3039fB5c7b3364e",
      "txHash": "0x7a17ead03863dc106c890263ca073925a1a2ad1c5990bdc02c895f3ab8fd0082",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)144",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:55"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)4768",
            "contract": "Vault",
            "src": "contracts/Vault.sol:56"
          },
          {
            "label": "sgBridge",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ISgBridge)12184",
            "contract": "Vault",
            "src": "contracts/Vault.sol:58"
          },
          {
            "label": "totalDebtRatio",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:59"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:60"
          },
          {
            "label": "emergencyShutdown",
            "offset": 0,
            "slot": "256",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/Vault.sol:61"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)12257_storage))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:62"
          },
          {
            "label": "withdrawEpoch",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:63"
          },
          {
            "label": "_strategiesByChainId",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:65"
          },
          {
            "label": "_supportedChainIds",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(UintSet)8233_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:66"
          },
          {
            "label": "_withdrawEpochs",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(WithdrawEpoch)12293_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:67"
          },
          {
            "label": "_usedNonces",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:68"
          },
          {
            "label": "sgRouter",
            "offset": 0,
            "slot": "264",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawRequest)12270_storage)dyn_storage": {
            "label": "struct WithdrawRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)144": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISgBridge)12184": {
            "label": "contract ISgBridge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StrategyParams)12257_storage)": {
            "label": "mapping(address => struct StrategyParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint16 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint16 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)12257_storage))": {
            "label": "mapping(uint16 => mapping(address => struct StrategyParams))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint16 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(AddressSet)8076_storage)": {
            "label": "mapping(uint16 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawEpoch)12293_storage)": {
            "label": "mapping(uint256 => struct WithdrawEpoch)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8076_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)7761_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StrategyParams)12257_storage": {
            "label": "struct StrategyParams",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalGain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReport",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "performanceFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "strategist",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(UintSet)8233_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7761_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawEpoch)12293_storage": {
            "label": "struct WithdrawEpoch",
            "members": [
              {
                "label": "requests",
                "type": "t_array(t_struct(WithdrawRequest)12270_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inProgress",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approveExpected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approveActual",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approved",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedAmount",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(WithdrawRequest)12270_storage": {
            "label": "struct WithdrawRequest",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "success",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0760c272542451dbc8b3d6413b1d98b51baab5a40e247a57f476aa28f8350d75": {
      "address": "0x0215244d99163aA560d0dB2c51cA4a1a7caa2A54",
      "txHash": "0xc9fa038c4e20f66e0e5cdeef763d69fe37a51b787c8c14baa4b11cd7c0991b24",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)2320",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:55"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)7333",
            "contract": "Vault",
            "src": "contracts/Vault.sol:56"
          },
          {
            "label": "sgBridge",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ISgBridge)17418",
            "contract": "Vault",
            "src": "contracts/Vault.sol:58"
          },
          {
            "label": "totalDebtRatio",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:59"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:60"
          },
          {
            "label": "emergencyShutdown",
            "offset": 0,
            "slot": "256",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/Vault.sol:61"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)17534_storage))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:62"
          },
          {
            "label": "withdrawEpoch",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/Vault.sol:63"
          },
          {
            "label": "_strategiesByChainId",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint16,t_struct(AddressSet)10677_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:65"
          },
          {
            "label": "_supportedChainIds",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(UintSet)10834_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:66"
          },
          {
            "label": "_withdrawEpochs",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(WithdrawEpoch)17570_storage)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:67"
          },
          {
            "label": "_usedNonces",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "Vault",
            "src": "contracts/Vault.sol:68"
          },
          {
            "label": "sgRouter",
            "offset": 0,
            "slot": "264",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawRequest)17547_storage)dyn_storage": {
            "label": "struct WithdrawRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)7333": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)2320": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISgBridge)17418": {
            "label": "contract ISgBridge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StrategyParams)17534_storage)": {
            "label": "mapping(address => struct StrategyParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint16 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint16 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_struct(StrategyParams)17534_storage))": {
            "label": "mapping(uint16 => mapping(address => struct StrategyParams))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint16 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(AddressSet)10677_storage)": {
            "label": "mapping(uint16 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawEpoch)17570_storage)": {
            "label": "mapping(uint256 => struct WithdrawEpoch)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)10677_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10362_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)10362_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StrategyParams)17534_storage": {
            "label": "struct StrategyParams",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalGain",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReport",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "performanceFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "strategist",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(UintSet)10834_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10362_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawEpoch)17570_storage": {
            "label": "struct WithdrawEpoch",
            "members": [
              {
                "label": "requests",
                "type": "t_array(t_struct(WithdrawRequest)17547_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inProgress",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approveExpected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approveActual",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approved",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedAmount",
                "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(WithdrawRequest)17547_storage": {
            "label": "struct WithdrawRequest",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLoss",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "success",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "98c3770e296ee5dc5dc539dcb8fe5f6e9c61703b82398a4d87e1cc17fadcc7c6": {
      "address": "0x3edbE670D03C4A71367dedA78E73EA4f8d68F2E4",
      "txHash": "0xfa8ae21984b208fbd32a40d6b59d9074689d9dc2b780aabf4b0122c5c1cff199",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)2320",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "@layerzerolabs/solidity-examples/contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "strategist",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:79"
          },
          {
            "label": "want",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20)7333",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:80"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:81"
          },
          {
            "label": "vaultChainId",
            "offset": 20,
            "slot": "203",
            "type": "t_uint16",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:82"
          },
          {
            "label": "currentChainId",
            "offset": 22,
            "slot": "203",
            "type": "t_uint16",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:83"
          },
          {
            "label": "wantDecimals",
            "offset": 24,
            "slot": "203",
            "type": "t_uint8",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:84"
          },
          {
            "label": "slippage",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:85"
          },
          {
            "label": "emergencyExit",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:86"
          },
          {
            "label": "sgBridge",
            "offset": 1,
            "slot": "205",
            "type": "t_contract(ISgBridge)17418",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:87"
          },
          {
            "label": "sgRouter",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IStargateRouter)17215",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:88"
          },
          {
            "label": "withdrawnInEpoch",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:90"
          },
          {
            "label": "_signNonce",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/BaseStrategy.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)7333": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)2320": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISgBridge)17418": {
            "label": "contract ISgBridge",
            "numberOfBytes": "20"
          },
          "t_contract(IStargateRouter)17215": {
            "label": "contract IStargateRouter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
