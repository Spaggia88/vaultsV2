/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  LZEndpointMock,
  LZEndpointMockInterface,
} from "../../../../../contracts/mock/crossChain/LZEndpointMock.sol/LZEndpointMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_destination",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "_send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bys",
        type: "bytes",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_srcAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_nonce",
        type: "bytes",
      },
    ],
    name: "estimateFees",
    outputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_srcAddress",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_dstAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "receivePayload",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_sourceChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_destination",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "srcChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002457600161ffff196000541617600055610678908161002a8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816340a7bb101461007a5750806342526e4e1461007557806349d1260514610070578063c2fa48131461006b578063c5803100146100665763d552a9d31461006157600080fd5b610461565b6103c4565b6102bd565b61029b565b610248565b346101005760a036600319011261010057610093610103565b5061009c610128565b506001600160401b036044358181116100fc576100bd903690600401610154565b5050606435801515036100f8576084359081116100f8576100e2903690600401610154565b50506000608081905260a052607f1960c0016080f35b5080fd5b8280fd5b80fd5b6004359061ffff8216820361011457565b600080fd5b359061ffff8216820361011457565b602435906001600160a01b038216820361011457565b608435906001600160a01b038216820361011457565b9181601f84011215610114578235916001600160401b038311610114576020838186019501011161011457565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116101aa57604052565b610181565b606081019081106001600160401b038211176101aa57604052565b604081019081106001600160401b038211176101aa57604052565b81601f82011215610114576001600160401b0391813591908383116101aa5760405193601f8401601f19908116603f01168501908111858210176101aa576040528284526020838301011161011457816000926020809301838601378301015290565b34610114576020366003190112610114576004356001600160401b03811161011457601461027c60209236906004016101e5565b01516040516001600160a01b039091168152f35b600091031261011457565b3461011457600036600319011261011457602061ffff60005416604051908152f35b346101145760c0366003190112610114576102d6610103565b6001600160401b0390602435828111610114576102f79036906004016101e5565b6044356001600160a01b0381168103610114576064359184831683036101145760a435948511610114576103326103389536906004016101e5565b9361057a565b005b60c06003198201126101145760043561ffff8116810361011457916001600160401b036024358181116101145783610374916004016101e5565b92604435828111610114578161038c916004016101e5565b926064356001600160a01b038116810361011457926103a961013e565b9260a435918211610114576103c091600401610154565b9091565b60146103cf3661033a565b5050505092015160405133606090811b602083015282901b6001600160601b03191660348201526028815292906001600160a01b031661040e846101af565b803b1561011457610439936000809460405196879586948593621d356760e01b855260048501610609565b03925af1801561045c5761044957005b8061045661033892610197565b80610290565b61056e565b604061046c3661033a565b91508094969395508092500103126101145761048790610119565b506000809261ffff8254169060405190336020830152602082526104aa826101ca565b601401516001600160a01b031690813b1561052a57836104f09361050860405197889687958694621d356760e01b8652600486015260806024860152608485019061052e565b9084604485015260031984830301606485015261052e565b03925af1801561045c5761051a575080f35b8061045661052792610197565b80f35b8380fd5b919082519283825260005b84811061055a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610539565b6040513d6000823e3d90fd5b929390916001600160a01b031690813b1561011457600080946105e96105c89761ffff94604051998a9889978896621d356760e01b885216600487015260806024870152608486019061052e565b6001600160401b03909216604485015283820360031901606485015261052e565b03925af1801561045c576105fa5750565b8061045661060792610197565b565b9161062a9061ffff61063f959316845260806020850152608084019061052e565b9160006040820152606081840391015261052e565b9056fea26469706673582212202bde2d0f8d164941f6cc548c83c4b5224ffdf1aaa21969217f573ace4d7583e564736f6c63430008180033";

type LZEndpointMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LZEndpointMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LZEndpointMock__factory extends ContractFactory {
  constructor(...args: LZEndpointMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LZEndpointMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LZEndpointMock__factory {
    return super.connect(runner) as LZEndpointMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LZEndpointMockInterface {
    return new Interface(_abi) as LZEndpointMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LZEndpointMock {
    return new Contract(address, _abi, runner) as unknown as LZEndpointMock;
  }
}
