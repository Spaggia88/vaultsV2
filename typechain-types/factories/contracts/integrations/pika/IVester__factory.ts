/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVester,
  IVesterInterface,
} from "../../../../contracts/integrations/pika/IVester";

const _abi = [
  {
    inputs: [],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "claimableAll",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "initialDepositedAll",
    outputs: [
      {
        internalType: "uint256",
        name: "initialDepositedAllAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVester__factory {
  static readonly abi = _abi;
  static createInterface(): IVesterInterface {
    return new Interface(_abi) as IVesterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVester {
    return new Contract(address, _abi, runner) as unknown as IVester;
  }
}
