/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPikaPerpV4,
  IPikaPerpV4Interface,
} from "../../../../contracts/integrations/pika/IPikaPerpV4";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeOwner",
        type: "address",
      },
    ],
    name: "getStake",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "amount",
            type: "uint96",
          },
          {
            internalType: "uint128",
            name: "shares",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "timestamp",
            type: "uint128",
          },
        ],
        internalType: "struct IPikaPerpV4.Stake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPikaPerpV4__factory {
  static readonly abi = _abi;
  static createInterface(): IPikaPerpV4Interface {
    return new Interface(_abi) as IPikaPerpV4Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPikaPerpV4 {
    return new Contract(address, _abi, runner) as unknown as IPikaPerpV4;
  }
}
