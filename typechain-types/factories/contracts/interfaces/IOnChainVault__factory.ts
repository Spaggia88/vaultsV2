/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOnChainVault,
  IOnChainVaultInterface,
} from "../../../contracts/interfaces/IOnChainVault";

const _abi = [
  {
    inputs: [],
    name: "Vault__DepositLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__InactiveStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__NotEnoughShares",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Vault__OnlyAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__UnacceptableLoss",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V13",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V14",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V15",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V17",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V2",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V3",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V4",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V6",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V7",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V8",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V9",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__ZeroToWithdraw",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtPaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalGain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalLoss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDebt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtAdded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtRatio",
        type: "uint256",
      },
    ],
    name: "StrategyReported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
    ],
    name: "StrategyWithdrawnSome",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_debtRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_performanceFee",
        type: "uint256",
      },
    ],
    name: "addStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "revokeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_debtRatio",
        type: "uint256",
      },
    ],
    name: "updateStrategyDebtRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxLoss",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOnChainVault__factory {
  static readonly abi = _abi;
  static createInterface(): IOnChainVaultInterface {
    return new Interface(_abi) as IOnChainVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOnChainVault {
    return new Contract(address, _abi, runner) as unknown as IOnChainVault;
  }
}
