/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVault,
  IVaultInterface,
} from "../../../contracts/interfaces/IVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V1",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V10",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V11",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V12",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V13",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V14",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V15",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V16",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V17",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V18",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V19",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V2",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V20",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V21",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V22",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V23",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V3",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V4",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V5",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V6",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V7",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V8",
    type: "error",
  },
  {
    inputs: [],
    name: "Vault__V9",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wantTokenAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestCount",
        type: "uint256",
      },
    ],
    name: "FulfilledWithdrawEpoch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SgReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtPaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalGain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalLoss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDebt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtAdded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtRatio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "StrategyReported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "StrategyWithdrawnSome",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wantTokenAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
] as const;

export class IVault__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultInterface {
    return new Interface(_abi) as IVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVault {
    return new Contract(address, _abi, runner) as unknown as IVault;
  }
}
