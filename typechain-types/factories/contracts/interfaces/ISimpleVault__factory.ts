/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISimpleVault,
  ISimpleVaultInterface,
} from "../../../contracts/interfaces/ISimpleVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainId",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loss",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "debtPayment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "giveToStrategy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "requestFromStrategy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creditAvailable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IStrategyMessages.StrategyReport",
        name: "_message",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_receivedTokens",
        type: "uint256",
      },
    ],
    name: "onChainReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISimpleVault__factory {
  static readonly abi = _abi;
  static createInterface(): ISimpleVaultInterface {
    return new Interface(_abi) as ISimpleVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISimpleVault {
    return new Contract(address, _abi, runner) as unknown as ISimpleVault;
  }
}
