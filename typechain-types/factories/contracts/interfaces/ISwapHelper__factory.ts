/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISwapHelper,
  ISwapHelperInterface,
} from "../../../contracts/interfaces/ISwapHelper";

const _abi = [
  {
    inputs: [],
    name: "fulfillQuote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fulfillSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestQuote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "slippage",
        type: "uint8",
      },
    ],
    name: "requestSwap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ISwapHelper__factory {
  static readonly abi = _abi;
  static createInterface(): ISwapHelperInterface {
    return new Interface(_abi) as ISwapHelperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ISwapHelper {
    return new Contract(address, _abi, runner) as unknown as ISwapHelper;
  }
}
